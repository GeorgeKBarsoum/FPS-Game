#version 330 core


layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 vertexColor;
layout(location = 2) in vec2 texCoord;
layout(location = 3) in vec3 normal_modelspace;

uniform mat4 model;
uniform mat4 projection;
uniform mat4 view;

out vec3 fragColor;
out vec2 TexCoord;

out vec3 vertexPosition_worldspace;
out vec3 normal_worldspace;

void main(){

	gl_Position =  projection*view*model * vec4(vertexPosition_modelspace,1);
	fragColor = vertexColor;
	TexCoord = texCoord;
	
	vertexPosition_worldspace = vec3(model*vec4(vertexPosition_modelspace, 1));
	normal_worldspace = normalize(vec3(model * vec4(normal_modelspace, 0)));

}


